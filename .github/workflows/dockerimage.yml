name: docker

"on":
  workflow_call:
    inputs:
      build_args:
        description: >-
          Additional build arguments in `KEY=VALUE` format, preferrably one per
          line
        required: false
        type: string
        default: ""
      container_name:
        description: >-
          The base name of the docker container; e.g. just the "xyz" part of
          "edence/xyz:latest"
        required: true
        type: string
      context_path:
        description: >-
          The path (relative within the repo) of the directory that contains
          the Dockerfile
        required: false
        type: string
        default: .
      dockerhub_org:
        description: >-
          The Docker Hub organization name or username where the image should
          be uploaded; e.g. just the "edence" part of "edence/xyz:latest";
          leave blank to skip the normal Docker Hub tag
        required: false
        type: string
        default: ${{ github.repository_owner == 'edencehealth' && 'edence' || github.repository_owner }}
      github_org:
        description: >-
          The GitHub organization name or username where the image should be
          uploaded; e.g. just the "edencehealth" part of
          "edencehealth/xyz:latest"; leave blank to skip the normal GitHub tag
        required: false
        type: string
        default: ${{ github.repository_owner }}
      platforms:
        description: >-
          The comma-separated target platform(s) to use when building the image
        required: false
        type: string
        default: linux/amd64,linux/arm64
      push:
        description: >-
          Whether to push the image to the container registries (building
          without pushing may be useful as a PR check)
        required: false
        type: boolean
        default: ${{ github.event_name != 'pull_request' }}
      push_readme:
        description: >-
          Path of the README file to push to Docker Hub. This runs only if the
          dockerhub_org and container_name inputs are non-empty. The Docker Hub
          repo's long_description will be set to the contents of the given
          readme file. The Docker Hub short description will be set from the
          GitHub repo's description. This only runs if the "latest" image tag
          would be updated.
          (example value: "./README.md")
        required: false
        type: string
        default: ""
      registry:
        description: >-
          Server address of an additional Docker registry to log into
        required: false
        type: string
        default: ""
      registry_paths:
        description: >-
          Additional registry paths, preferrably one per line (for example
          "docker.io/bitnami/redis" without ":latest")
        required: false
        type: string
        default: ""
      runs_on:
        description: >-
          Quoted JSON string specifying a list of Workflow Runner machine
          types/labels to run the job on (note the variable name contains an
          underscore not a dash) - the value is processed using `fromJson`;
          example self-hosted runner value "['self-hosted', 'linux']"
        required: false
        type: string
        default: |-
          ["ubuntu-latest"]
    outputs:
      tags:
        description: >-
          The docker tags that were ultimately generated
        value: ${{ jobs.image.outputs.tags }}
    secrets:
      dockerhub_token:
        description: >-
          The Docker Hub personal access token to use when uploading the image
        required: false
      dockerhub_username:
        description: >-
          The Docker Hub username to use when uploading the image
        required: false
      registry_password:
        description: >-
          Password or token used to log into the additional registry
        required: false
      registry_username:
        description: >-
          Username or Key ID used to log into the registry
        required: false

jobs:
  image:
    # https://docs.github.com/en/actions/examples/using-scripts-to-test-your-code-on-a-runner#example-workflow
    runs-on: ${{ fromJSON(inputs.runs_on) }}
    permissions:
      packages: write
    outputs:
      tags: |-
        ${{ steps.meta.outputs.tags }}
    steps:
      # https://github.com/actions/checkout
      - name: Checkout the code
        uses: actions/checkout@v4

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        if: ${{ inputs.dockerhub_org != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}

      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        if: ${{ inputs.github_org != '' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/login-action
      - name: Login to generic container registry
        if: ${{ inputs.registry != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |-
            ${{ inputs.github_org != '' && format('ghcr.io/{0}/{1}', inputs.github_org, inputs.container_name) || '' }}
            ${{ inputs.dockerhub_org != '' && format('{0}/{1}', inputs.dockerhub_org, inputs.container_name) || '' }}
            ${{ inputs.registry_paths != '' && inputs.registry_paths || '' }}
          tags: |-
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=pr
            type=sha

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          build-args: |-
            COMMIT_SHA=${{ github.sha }}
            GITHUB_TAG=${{ github.ref_name }}
            GIT_COMMIT=${{ github.sha }}
            GIT_TAG=${{ github.ref_name }}
            ${{ inputs.build_args != '' && inputs.build_args || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ inputs.context_path }}
          labels: |-
            ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          push: >-
            ${{
              inputs.push && (
                inputs.dockerhub_org != '' ||
                inputs.github_org != '' ||
                inputs.registry != ''
              )
            }}
          tags: |-
            ${{ steps.meta.outputs.tags }}

  readme:
    if: >-
      github.ref == format('refs/heads/{0}', github.event.repository.default_branch) &&
      inputs.push_readme != '' &&
      inputs.dockerhub_org != '' &&
      inputs.container_name != ''
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            ${{ inputs.push_readme }}
          sparse-checkout-cone-mode: false

      # https://github.com/peter-evans/dockerhub-description
      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}
          repository: ${{ format('{0}/{1}', inputs.dockerhub_org, inputs.container_name) }}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ${{ inputs.push_readme }}
