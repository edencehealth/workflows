name: docker image

on:
  workflow_call:
    inputs:
      container_name:
        description: 'The base name of the docker container; e.g. just the "xyz" part of "edence/xyz:latest"'
        required: true
        type: string
      dockerhub_org:
        default: 'edence'
        description: 'The Docker Hub organization name or username where the image should be uploaded; e.g. just the "edence" part of "edence/xyz:latest"'
        required: false
        type: string
      github_org:
        default: 'edencehealth'
        description: 'The GitHub organization name or username where the image should be uploaded; e.g. just the "edencehealth" part of "edencehealth/xyz:latest"'
        required: false
        type: string
      context_path:
        default: '.'
        description: 'The path (relative within the repo) of the directory that contains the Dockerfile'
        required: false
        type: string
      platforms:
        default: "linux/amd64,linux/arm64"
        description: the comma-separated target platform(s) to use when building the image
        required: false
        type: string
      push:
        default: ${{ github.event_name != 'pull_request' }}
        description: whether to push the image to the container registries (building without pushing may be useful as a PR check)
        required: false
        type: boolean
    secrets:
      dockerhub_username:
        description: the Docker Hub username to use when uploading the image
        required: true
      dockerhub_token:
        description: the Docker Hub personal access token to use when uploading the image
        required: true
      github_username:
        description: the username to use when uploading the image to GitHub Container Registry (defaults to github.actor)
        required: false
      github_token:
        description: the personal access token to use when uploading the image to GitHub Container Registry (defaults to secrets.GITHUB_TOKEN)
        required: false

jobs:
  image:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout the code
        uses: actions/checkout@v3

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}

      # https://github.com/docker/login-action
      - name: Login to github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ inputs.github_org }}/${{ inputs.container_name }}
            ${{ inputs.dockerhub_org }}/${{ inputs.container_name }}
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=pr
            type=sha

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.context_path }}
          push: ${{ inputs.push }}
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            GITHUB_TAG=${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
